{"version":3,"sources":["logo.svg","ModalPayBill.js","Header.js","Balance.js","Table.js","Select.js","Footer.js","ShoppingSpree.js","serviceWorker.js","index.js"],"names":["module","exports","amount","Header","this","props","title","React","Component","Balance","className","balance","toLocaleString","onClick","handlePayBill","Table","removeItem","index","totalCost","recoverCart","recoverBalance","tableList","arr","map","item","i","name","value","key","quantity","unitCost","items","length","colspan","caltotalCost","Select","getPrice","price","products","forEach","element","addToCart","e","preventDefault","target","elements","selectedItem","purchaseNum","has","Number","push","console","log","renewBalance","productsList","listItems","onSubmit","type","defaultValue","min","Footer","Modal","setAppElement","ModalPayBill","ClassName","isOpen","open","onRequestClose","contentLabel","id","required","err","document","getElementById","ShoppingSpree","state","app","limit","openModalPayBill","handlevalidate","setState","payBill","parseFloat","toString","prevState","parseInt","deduct","splice","array","spent","undefined","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fc35b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport Modal from 'react-modal';\r\nlet amount;\r\n\r\nconst ModalPayBill = (props) => {\r\n\r\n    return (\r\n        <Modal ClassName=\"modal\"\r\n            isOpen={props.open}\r\n            onRequestClose={() => { props.handlePayBill(false) }}\r\n            contentLabel=\"Confirm Removing all things to do\">\r\n            <h2>Pay Bill</h2>\r\n            <label>Amount to Pay:</label>\r\n            <input type=\"text\" id=\"amount\" required></input>\r\n            <p>{props.err}</p>\r\n            <br/>\r\n            {/*props.selectedOption && <p>{props.selectedOption}</p> */}\r\n            <button onClick={() => { amount=document.getElementById('amount').value;props.handlePayBill(true,amount) }}>Pay Bill</button>\r\n            <button onClick={() => { props.handlePayBill(false,amount) }}>Cancel</button>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default ModalPayBill;","import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>{this.props.title}</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Balance extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"balance\" >\r\n        {(this.props.balance>= 0) && <p>You have ${this.props.balance.toLocaleString()} left to spend.</p>}\r\n        {(this.props.balance< 0) && <p>You are now in debt and you owe ${(this.props.balance* (-1)).toLocaleString()}.</p>}\r\n        <button onClick={() => {this.props.handlePayBill(false) }}>Pay Bill</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Balance;","import React from 'react';\r\n\r\nclass Table extends React.Component {\r\n  removeItem=(index,totalCost)=>{\r\n    this.props.recoverCart(index);\r\n    this.props.recoverBalance(totalCost);\r\n  }\r\n\r\n  tableList = (arr) => {\r\n    const purItems = arr.map((item, i) =><tr name=\"inList\" value={item.item} key={i}><td>{item.quantity}</td><td>{item.item}</td><td>${item.unitCost.toLocaleString()}</td><td>${item.totalCost.toLocaleString()}</td><td><button onClick={()=>{this.removeItem(i,item.totalCost)}}>Remove Item</button></td></tr>);\r\n    return purItems;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {(this.props.items && this.props.items.length > 0) ?\r\n          <table>\r\n            <thead><tr><th>Quantity</th><th>Item</th><th>Unit Cost</th><th>Total Cost</th><th/></tr></thead>\r\n            <tbody>{this.tableList(this.props.items)}</tbody>\r\n            <tfoot><tr><td  className=\"total\" colspan=\"3\">Total:</td><td>${this.props.caltotalCost(this.props.items).toLocaleString()}</td><td/></tr></tfoot>\r\n          </table> :\r\n          <p>Add Some Items</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nclass Select extends React.Component {\r\n\r\n     getPrice = (item) => {\r\n        let price = 0;\r\n        this.props.products.forEach(function (element) {\r\n          if (item === element.item) {\r\n            price = element.price;\r\n          }\r\n        })\r\n        return price;\r\n      }\r\n    addToCart = (e) => {\r\n        e.preventDefault();\r\n        const item = e.target.elements.selectedItem.value;\r\n        const quantity = e.target.elements.purchaseNum.value;\r\n        if (item && quantity > 0) {\r\n          let has = false;\r\n          for (let i = 0; i < this.props.items.length; i++) {\r\n            if (this.props.items[i].item === item) {\r\n              has = true;\r\n              this.props.items[i].quantity += Number(quantity);\r\n              this.props.items[i].totalCost += Number(quantity) * this.getPrice(item);\r\n            }\r\n          }\r\n          if (has === false) {\r\n            this.props.items.push({ item: item, quantity: Number(quantity), unitCost: this.getPrice(item), totalCost: this.getPrice(item)* Number(quantity) });\r\n          }\r\n          console.log(this.props.items);\r\n          e.target.elements.purchaseNum.value =\"1\";\r\n         this.props.renewBalance();\r\n\r\n         console.log(this.props.balance);\r\n        }\r\n      }\r\n     productsList = (arr) => {\r\n        const listItems = arr.map((item, i) => <option key={i} value={item.item}>{item.item} : ${item.price}</option>);\r\n         return <select name=\"selectedItem\">{listItems}</select>;\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n<form onSubmit={this.addToCart}>\r\n        <label>Select Item:</label>\r\n        {(this.props.products && this.props.products.length > 0) && this.productsList(this.props.products)}\r\n        <span className=\"quantity\">\r\n        <label>Quantity</label>\r\n        <input type=\"number\" name=\"purchaseNum\" className=\"purchaseNum\" defaultValue=\"1\" min=\"0\" ></input></span>\r\n        <button type=\"submit\" >Add Item</button>\r\n      </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Select;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <div className=\"footer\">\r\n                <hr/>\r\n                <p> &copy; Ming Wang</p>\r\n                </div>\r\n\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport logo from './logo.svg';\nimport Header from './Header';\nimport Balance from './Balance';\nimport Table from './Table';\nimport Select from './Select';\nimport Footer from './Footer';\nimport ModalPayBill from './ModalPayBill';\nimport './styles/styles.scss';\n\nclass ShoppingSpree extends React.Component {\n\n  state = {\n    app: {\n      title: 'Shopping Spree',\n      limit: 5000,\n      items: []\n    },\n    products: [\n      {\n        item: 'Camera',\n        price: 500,\n\n      },\n      {\n        item: 'Shoes',\n        price: 150,\n\n      },\n      {\n        item: 'Hand Bag',\n        price: 700,\n\n      },\n      {\n        item: 'Smart Phone',\n        price: 1200,\n\n      },\n      {\n        item: 'Sweater',\n        price: 120,\n\n      },\n      {\n        item: 'Watch',\n        price: 600,\n\n      },\n      {\n        item: 'Headphones',\n        price: 300,\n\n      },\n      {\n        item: 'Book',\n        price: 20,\n\n      },\n      {\n        item: 'Ring',\n        price: 3000,\n\n      }\n    ],\n    balance: 5000,\n    openModalPayBill: false,\n    err: \"\"\n  }\n  handlevalidate = () => {\n    this.setState(() => {\n      return {\n        err: 'invalid input!',\n        openModalPayBill: true\n      }\n    });\n  }\n  handlePayBill = (payBill = true, amount) => {\n    this.state.err=\"\"\n    console.log(amount);\n    console.log(payBill);\n    if (payBill) {\n      if (parseFloat(amount).toString() == \"NaN\" || amount == '') {\n        this.handlevalidate();\n        return;\n      }\n      this.setState((prevState) => (\n        {\n          balance: prevState.balance + parseInt(amount),\n          openModalPayBill: !prevState.openModalPayBill\n        }\n      ));\n      console.log(this.state.openModalPayBill);\n    } else {\n      this.setState((prevState) => ({ openModalPayBill: !prevState.openModalPayBill }));\n    }\n  }\n\n  renewBalance = (deduct) => {\n\n    this.setState((prevState) => {\n      return {\n        balance: prevState.balance - deduct\n      };\n    });\n  }\n  recoverCart = (index) => {\n\n    console.log(index);\n    console.log(this.state.app.items);\n    this.setState((prevState) => {\n      return {\n        items: prevState.app.items.splice(index, 1)\n      };\n    });\n  }\n  recoverBalance = (totalCost) => {\n\n    this.setState((prevState) => {\n      return {\n        balance: prevState.balance + totalCost\n      };\n    });\n  }\n  renewBalance = () => {\n    this.setState((prevState) => {\n      return {\n        balance: (prevState.app.limit - this.caltotalCost(this.state.app.items))\n      };\n    });\n  }\n  caltotalCost = (array) => {\n    let spent = 0;\n    console.log(array);\n    if (array != undefined) {\n      array.forEach(element => {\n        spent += element.totalCost;\n      });\n    }\n    return spent;\n  }\n  render() {\n    return (\n      <div>\n        <Header title={this.state.app.title} />\n        <Balance balance={this.state.balance} handlePayBill={this.handlePayBill} />\n        <Table items={this.state.app.items} caltotalCost={this.caltotalCost} limit={this.state.app.limit} renewBalance={this.renewBalance} balance={this.state.balance} recoverCart={this.recoverCart} recoverBalance={this.recoverBalance} />\n        <Select items={this.state.app.items} products={this.state.products} caltotalCost={this.caltotalCost} renewBalance={this.renewBalance} balance={this.state.balance} />\n        <ModalPayBill open={this.state.openModalPayBill} handlePayBill={this.handlePayBill} err={this.state.err} />\n        <Footer/>\n      </div>\n    )\n  }\n}\nexport default ShoppingSpree;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ShoppingSpree from './ShoppingSpree';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ShoppingSpree />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}